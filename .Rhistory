install.packages("writexl")
library(writexl)
data <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 30, 35),
Occupation = c("Engineer", "Doctor", "Artist")
)
write_xlsx(data, "output.xlsx")
# Convert Marks column from numeric to character and back to numeric
df$Marks <- as.character(df$Marks)
mean(A)
A = c(1, 2, 3, 4, 5, 5, 5, 6)
mean(A)
A = c(1, 2, 3, 4, 5, 5, 5, 6)
mean(A)
median(A)
A = c(1, 2, 3, 4, 5, 5, 5, 6)
mean(A)
median(A)
y = table(A)
y
z= prop.table(table(A))
z
names(y)[which(y==max(y))]
A = c(1, 2, 3, 4, 5, 5, 5, 6)
mean(A)
mean(A)=sum(A)/length(A)
mean(A)<-sum(A)/length(A)
A = c(1, 2, 3, 4, 5, 5, 5, 6)
mean(A)
mean(A)<-sum(A)/length(A)
A = c(1, 2, 3, 4, 5, 5, 5, 6)
mean(A)
mean(A)=sum(A)/length(A)
A = c(1, 2, 3, 4, 5, 5, 5, 6)
mean(A)
mean=sum(A)/length(A)
mean
median(A)
y = table(A)
y
z= prop.table(table(A))
z
names(y)[which(y==max(y))]
A = c(1, 2, 3, 4, 5, 5, 5, 6)
mean(A)
mean=sum(A)/length(A)
mean
median(A)
y = table(A)
y
z= prop.table(table(A))
z
names(y)[which(y==max(y))]
B=c(A,NA)
B
mean(B)
mean(B,na.rm=TRUE)
A = c(1, 2, 3, 4, 5, 5, 5, 6)
mean(A)
mean=sum(A)/length(A)
mean
median(A)
y = table(A)
y
z= prop.table(table(A))
z
names(y)[which(y==max(y))]
B=c(A,NA)
B
mean(B)
mean(B,na.rm=TRUE)
sd(A)
sd(B,na.rm=TRUE)
var(A)
sqrt(var(A))
A = c(1, 2, 3, 4, 5, 5, 5, 6)
mean(A)
mean=sum(A)/length(A)
mean
median(A)
y = table(A)
y
z= prop.table(table(A))
z
names(y)[which(y==max(y))]
B=c(A,NA)
B
mean(B)
mean(B,na.rm=TRUE)
sd(A)
sd(B,na.rm=TRUE)
var(A)
sqrt(var(A))
range(A)
z=range(A)
diff(z)
max(A)
min(A)
max(A)-min(A)
A = c(1, 2, 3, 4, 5, 5, 5, 6)
mean(A)
mean=sum(A)/length(A)
mean
median(A)
y = table(A)
y
z= prop.table(table(A))
z
names(y)[which(y==max(y))]
B=c(A,NA)
B
mean(B)
mean(B,na.rm=TRUE)
sd(A)
sd(B,na.rm=TRUE)
var(A)
sqrt(var(A))
range(A)
z=range(A)
diff(z)
max(A)
min(A)
max(A)-min(A)
IQR(B,na.rm=TRUE)
quantile(A)
quantile(A,0.25)
quantile(B,na.rm=TRUE,0.75)
x=c(0,1,2,3)
f=c(8,11,5,1)
a=rep(x,f)	# repeating x, f number of times
a
mean(a)	# mean
median(a)	#median
y=table(a)	# frequency table
y a
x=c(0,1,2,3)
f=c(8,11,5,1)
a=rep(x,f)	# repeating x, f number of times
a
mean(a)	# mean
median(a)	#median
y=table(a)	# frequency table
y
names(y)[which(y==max(y))]	# mode
sd(a)	# standard deviation
x=c(0,1,2,3)
f=c(8,11,5,1)
a=rep(x,f)	# repeating x, f number of times
a
mean(a)	# mean
median(a)	#median
y=table(a)	# frequency table
y
names(y)[which(y==max(y))]	# mode
sd(a)	# standard deviation
# Given ages of 20 students
ages <- c(18, 19, 19, 19, 19, 20, 20, 20, 20, 20,
21, 21, 21, 21, 22, 23, 24, 27, 30, 36)
# a) Find Mean and Median of all students
mean_age <- mean(ages)
median_age <- median(ages)
cat("Mean Age:", mean_age, "\n")
cat("Median Age:", median_age, "\n")
# b) Find median age of students under 25 years
under_25 <- ages[ages < 25]
median_under_25 <- median(under_25)
cat("Median Age of students under 25:", median_under_25, "\n")
# c) Find modal age (most frequently occurring age)
table_ages <- table(ages)  # Frequency table
modal_age <- as.numeric(names(table_ages[table_ages == max(table_ages)]))
cat("Modal Age(s):", modal_age, "\n")
x=c(0,1,2,3)
f=c(8,11,5,1)
a=rep(x,f)	# repeating x, f number of times
a
mean(a)	# mean
median(a)	#median
y=table(a)	# frequency table
y
names(y)[which(y==max(y))]	# mode
sd(a)	# standard deviation
# Given ages of 20 students
ages <- c(18, 19, 19, 19, 19, 20, 20, 20, 20, 20,
21, 21, 21, 21, 22, 23, 24, 27, 30, 36)
# a) Find Mean and Median of all students
mean_age <- mean(ages)
median_age <- median(ages)
cat("Mean Age:", mean_age, "\n")
cat("Median Age:", median_age, "\n")
# b) Find median age of students under 25 years
under_25 <- ages[ages < 25]
median_under_25 <- median(under_25)
cat("Median Age of students under 25:", median_under_25, "\n")
# c) Find modal age (most frequently occurring age)
table_ages <- table(ages)  # Frequency table
modal_age <- as.numeric(names(table_ages[table_ages == max(table_ages)]))
cat("Modal Age(s):", modal_age, "\n")
# Data
midpoints <- c(147.5, 152.5, 157.5, 162.5, 167.5, 172.5, 177.5, 182.5)
freq <- c(4, 6, 28, 58, 64, 30, 5, 5)
cum_freq <- cumsum(freq)
N <- sum(freq)
# Mean
mean_value <- sum(midpoints * freq) / N
# Function for Median, Q1, Q3
quantile_value <- function(p) {
index <- which(cum_freq >= p * N)[1]
L <- midpoints[index] - 2.5
CF <- ifelse(index == 1, 0, cum_freq[index - 1])
f <- freq[index]
return(L + ((p * N - CF) / f) * 5)
}
median_value <- quantile_value(0.5)
Q1_value <- quantile_value(0.25)
Q3_value <- quantile_value(0.75)
# Mode
mode_index <- which.max(freq)
mode_value <- midpoints[mode_index]
# Print results
cat("Mean:", mean_value, "\n")
cat("Median:", median_value, "\n")
cat("Q1:", Q1_value, "\n")
cat("Q3:", Q3_value, "\n")
cat("Mode:", mode_value, "\n")
getwd()
setwd("C:/Users/MITANAV/OneDrive/Desktop")
# Reading Excel file
install.packages("readxl")
library(readxl)
# Read the Excel file
data4 = read_xls("file_example.xls", 1)
